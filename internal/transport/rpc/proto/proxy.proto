syntax = "proto3";

package proxy;

option go_package = "github.com/SuzukiHonoka/spaceship/internal/transport/rpc/proto;proxy";

service Proxy{
  rpc DnsResolve(stream DnsRequest) returns (stream DnsResponse) {};
  rpc Proxy(stream ProxySRC) returns (stream ProxyDST) {};
}

message ProxySRC{
  oneof header_or_payload{
    ProxyHeader header = 1;
    bytes payload = 2;
  }

  message ProxyHeader{
    // user id
    string id = 1;
    // fqdn
    string fqdn = 2;
    // port
    uint32 port = 3;
  }
}

enum ProxyStatus{
  Session = 0;
  Error = 1;
  Accepted = 2;
  EOF = 3;
}

message ProxyDST{
  ProxyStatus status = 1;

  oneof header_or_payload{
    ProxyHeader header = 2;
    bytes payload = 3;
  }

  message ProxyHeader{
    string addr = 2;
  }
}

message DnsRequest{
  // user id
  string id = 1;
  // fqdn name
  string fqdn = 2;
  // enable ipv6
  bool ipv6 = 3;
}

message DnsResponse{
  // fqdn name
  string domain = 1;
  // fqdn resolved result
  repeated string result = 2;
}